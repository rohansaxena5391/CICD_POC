name: ServiceNow App Deployment Pipeline

on:
  push:
    branches:
      - main
      - release

jobs:
  deploy_dev:
    runs-on: ubuntu-latest
    env:
      SN_INSTANCE: ${{ secrets.SN_INSTANCE_URL }}
      SN_USERNAME: ${{ secrets.SN_USERNAME }}
      SN_PASSWORD: ${{ secrets.SN_PASSWORD }}
      APP_SCOPE: x_yourcompany_myapp
      # name of your pipeline in SN
      PIPELINE_NAME: MyApp Pipeline
      # the environments as defined in your pipeline record in SN
      ENV_DEV: Dev
      ENV_TEST: Test
      ENV_PROD: Prod

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Apply changes to Dev
        run: |
          curl -X POST "$SN_INSTANCE/api/sn_cicd/apply_changes" \
            --user "$SN_USERNAME:$SN_PASSWORD" \
            --header "Content-Type: application/json" \
            --data '{
              "application_scope": "'"$APP_SCOPE"'",
              "branch_name": "'"${{ github.ref_name }}"'"
            }'

      - name: Publish application (Dev)
        run: |
          curl -X POST "$SN_INSTANCE/api/sn_cicd/app_repo/publish" \
            --user "$SN_USERNAME:$SN_PASSWORD" \
            --header "Content-Type: application/json" \
            --data '{
              "application_scope": "'"$APP_SCOPE"'"
            }'

      - name: Install application (Dev)
        run: |
          curl -X POST "$SN_INSTANCE/api/sn_cicd/install" \
            --user "$SN_USERNAME:$SN_PASSWORD" \
            --header "Content-Type: application/json" \
            --data '{
              "application_scope": "'"$APP_SCOPE"'"
            }'

      - name: Request transition Dev → Test
        run: |
          curl -X POST "$SN_INSTANCE/api/sn_cicd/pipeline/transition" \
            --user "$SN_USERNAME:$SN_PASSWORD" \
            --header "Content-Type: application/json" \
            --data '{
              "pipeline_name": "'"$PIPELINE_NAME"'",
              "from_environment": "'"$ENV_DEV"'",
              "to_environment": "'"$ENV_TEST"'"
            }'

  wait_for_test_approval:
    runs-on: ubuntu-latest
    needs: deploy_dev
    steps:
      - name: Wait for approval
        run: |
          echo "Polling for change request approval..."
          for i in {1..30}; do
            STATUS=$(curl -s -X GET "$SN_INSTANCE/api/sn_cicd/pipeline/status?pipeline_name=$PIPELINE_NAME&environment=$ENV_TEST" \
              --user "$SN_USERNAME:$SN_PASSWORD" | jq -r .status)
            echo "Current status: $STATUS"
            if [ "$STATUS" = "approved" ]; then
              echo "Approved, continuing..."
              exit 0
            fi
            sleep 30
          done
          echo "Timed out waiting for approval"
          exit 1

  deploy_test:
    runs-on: ubuntu-latest
    needs: wait_for_test_approval
    env:
      SN_INSTANCE: ${{ secrets.SN_INSTANCE_URL }}
      SN_USERNAME: ${{ secrets.SN_USERNAME }}
      SN_PASSWORD: ${{ secrets.SN_PASSWORD }}
      APP_SCOPE: x_yourcompany_myapp

    steps:
      - name: Apply changes to Test
        run: |
          curl -X POST "$SN_INSTANCE/api/sn_cicd/apply_changes" \
            --user "$SN_USERNAME:$SN_PASSWORD" \
            --header "Content-Type: application/json" \
            --data '{
              "application_scope": "'"$APP_SCOPE"'",
              "branch_name": "'"${{ github.ref_name }}"'"
            }'

      - name: Publish application (Test)
        run: |
          curl -X POST "$SN_INSTANCE/api/sn_cicd/app_repo/publish" \
            --user "$SN_USERNAME:$SN_PASSWORD" \
            --header "Content-Type: application/json" \
            --data '{
              "application_scope": "'"$APP_SCOPE"'"
            }'

      - name: Install application (Test)
        run: |
          curl -X POST "$SN_INSTANCE/api/sn_cicd/install" \
            --user "$SN_USERNAME:$SN_PASSWORD" \
            --header "Content-Type: application/json" \
            --data '{
              "application_scope": "'"$APP_SCOPE"'"
            }'

      - name: Request transition Test → Prod
        run: |
          curl -X POST "$SN_INSTANCE/api/sn_cicd/pipeline/transition" \
            --user "$SN_USERNAME:$SN_PASSWORD" \
            --header "Content-Type: application/json" \
            --data '{
              "pipeline_name": "'"$PIPELINE_NAME"'",
              "from_environment": "'"$ENV_TEST"'",
              "to_environment": "'"$ENV_PROD"'"
            }'

  wait_for_prod_approval:
    runs-on: ubuntu-latest
    needs: deploy_test
    steps:
      - name: Wait for production approval
        run: |
          echo "Waiting for Prod environment approval..."
          for i in {1..30}; do
            STATUS=$(curl -s -X GET "$SN_INSTANCE/api/sn_cicd/pipeline/status?pipeline_name=$PIPELINE_NAME&environment=$ENV_PROD" \
              --user "$SN_USERNAME:$SN_PASSWORD" | jq -r .status)
            echo "Current status: $STATUS"
            if [ "$STATUS" = "approved" ]; then
              echo "Approved for prod"
              exit 0
            fi
            sleep 30
          done
          echo "Timed out waiting for prod approval"
          exit 1

  deploy_prod:
    runs-on: ubuntu-latest
    needs: wait_for_prod_approval
    env:
      SN_INSTANCE: ${{ secrets.SN_INSTANCE_URL }}
      SN_USERNAME: ${{ secrets.SN_USERNAME }}
      SN_PASSWORD: ${{ secrets.SN_PASSWORD }}
      APP_SCOPE: x_yourcompany_myapp

    steps:
      - name: Apply changes to Prod
        run: |
          curl -X POST "$SN_INSTANCE/api/sn_cicd/apply_changes" \
            --user "$SN_USERNAME:$SN_PASSWORD" \
            --header "Content-Type: application/json" \
            --data '{
              "application_scope": "'"$APP_SCOPE"'",
              "branch_name": "'"${{ github.ref_name }}"'"
            }'

      - name: Publish application (Prod)
        run: |
          curl -X POST "$SN_INSTANCE/api/sn_cicd/app_repo/publish" \
            --user "$SN_USERNAME:$SN_PASSWORD" \
            --header "Content-Type: application/json" \
            --data '{
              "application_scope": "'"$APP_SCOPE"'"
            }'

      - name: Install application (Prod)
        run: |
          curl -X POST "$SN_INSTANCE/api/sn_cicd/install" \
            --user "$SN_USERNAME:$SN_PASSWORD" \
            --header "Content-Type: application/json" \
            --data '{
              "application_scope": "'"$APP_SCOPE"'"
            }'
